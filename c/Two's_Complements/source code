 #include <stdio.h>
#include <stdlib.h>
#include <string.h>

void find_ones_complement(char binary_number[]) {
    int length = strlen(binary_number);
    for (int i = 0; i < length; i++) {
        if (binary_number[i] == '0') {
            binary_number[i] = '1';
        } else if (binary_number[i] == '1') {
            binary_number[i] = '0';
        } else {
            printf("Invalid binary number.\n");
            exit(1);
        }
    }
}

void find_twos_complement(char binary_number[]) {
    find_ones_complement(binary_number);

    int length = strlen(binary_number);
    int carry = 1;
    for (int i = length - 1; i >= 0; i--) {
        if (binary_number[i] == '1' && carry == 1) {
            binary_number[i] = '0';
        } else if (binary_number[i] == '0' && carry == 1) {
            binary_number[i] = '1';
            carry = 0;
        }
    }

     for (int i = 0; i < length; i++) {
        if (binary_number[i] == '0' && carry == 1) {
            binary_number[i] = '1';
            carry = 0;
        } else if (binary_number[i] == '1' && carry == 1) {
            binary_number[i] = '0';
        }
    }

     if (binary_number[0] == '0') {
        for (int i = length; i >= 0; i--) {
            binary_number[i] = binary_number[i - 1];
        }
        binary_number[0] = '1';
    }
}

int main() {
    char binary_number[64];

    printf("Enter a binary number: ");
    scanf("%s", binary_number);

    if (binary_number[0] == '-') {
        find_twos_complement(binary_number + 1);
        printf("Two's complement: -");
    } else {
        find_twos_complement(binary_number);
        printf("Two's complement: ");
    }

    printf("%s\n", binary_number);

    return 0;
}


// // Online C compiler to run C program online
// #include <stdio.h>
// #include <string.h>
// int main() {
//     // Write C code here
//  char binary [64];
//  scanf("%s",binary);
 
// int size=strlen(binary);

// for(int i=0;i<size;i++){
//     // printf("%d",i);
//     if(binary[i] == '1'){
//         binary[i]='0';
//     }else if(binary[i]=='0'){
//         binary[i]='1';
//     }else{
//         printf("invaild");
//     }
   
// }
//   printf("%s\n",binary);

//   int l_b=size-1;
//   int s_b=size-2;
//   if(binary[l_b]=='0'){
//       binary[l_b]='1';
//   }else if(binary[s_b]=='0' && binary[l_b]=='1'){
//       binary[s_b]='1';
//       binary[l_b]='0';
      
//   }else if(binary[s_b]=='1' && binary[l_b]=='1' && binary[size-3]==0){
//       binary[s_b]='0';
//       binary[l_b]='0';
//       binary[size-3]='1';
//   } 
//   printf("%s",binary);
 
 
//     return 0;
// }