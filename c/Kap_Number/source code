//   #include <stdio.h>
//  #include <math.h>
 
// int main() {
//   int o, n,num,cpy,org,k,power,di,last,first,po_f,pow_l,l_n;
//   int rev;
   
//   k=0;
//   scanf("%d",&num);
//   int u=num;
//   o=num;
//   n=num*num;
//     org=n;
//   cpy=n;
//   while(n!=0){
//       cpy=n%10;
      
//       n=n/10;
//         k++;
//   }
//   if(k%2==0){
//       di=k/2;
      
//       power=pow(10,di);
//       last=org%power;
  
//     po_f= (pow(10,(k)));
//     pow_l=(pow(10,(di)));
//   int thousands =org % po_f;
 
//   int l_n =org / pow_l;
//     int rev =0;
//   rev=last+l_n;
   
//   if(rev==num){
//      printf("yes");
//  }else{
//      printf("no");
     
//  }
   
//       }
//   else
//   {
//      float   di=k/2; 
//      int ki=round(di)+1;
     

//       power=pow(10,ki);
//       last=org%power;
 
//     po_f= (pow(10,(k-1)));
//     pow_l=(pow(10,(k-2)));
//   int thousands = org / po_f;
//   int remaining =org % po_f;
//   l_n=thousands * 10 + remaining /pow_l ;
 
//   int rev =last+l_n;
  
  
  
//   if(rev==num){
//      printf("yes");
//  }else{
//      printf("no");
     
//  }
        
//   }
 
 
//      return 0;
// }







#include <stdio.h>
#include <math.h>

int is_kaprekar(int n) {
    if (n == 1){ return 1}; 
    
    int square = n * n;
    int digits = 0;
    int temp = square;
    
     while (temp > 0) {
        digits++;
        temp /= 10;
    }
    
     for (int i = 1; i < digits; i++) {
        int right_part = square % (int)pow(10, i);
        int left_part = square / (int)pow(10, i);
        if (right_part + left_part == n) {
            return 1;
        }
    }
    
    return 0;
}

int main() {
    int num;
    printf("Enter a number: ");
    scanf("%d", &num);
    
    if (is_kaprekar(num)) {
        printf("%d is a Kaprekar number.\n", num);
    } else {
        printf("%d is not a Kaprekar number.\n", num);
    }
    
    return 0;
}